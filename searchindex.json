{"categories":[],"posts":[{"content":" 首先下载一个专为Spring设计的eclipse版本——sts，官网链接：Spring tool suite 4，这个IDE和eclipse非常相似，下载解压后可以直接运行；\n开始创建项目，本篇讲述从STS直接创建项目 new——\u0026gt;Spring Starter Project 接着，name填入项目名称，group随意，其他的不用管，这里的service URL指Spring boot官网地址。 next，version选择1.5.11（如果是2.0以上的也可以），Available中输入查找web选择和DevTools选项，选中。 点击next/finish均可，项目创建完毕，目录如下： 这个目录结构与eclipse中建立的maven项目基本一致。\n注意：\n项目创建过程中，会发现首次使用maven的时候从中央仓库下载jar包非常慢，这里可以使用阿里提供的镜像。找到STS/项目使用的maven的setting.xml文件，在其中的中添加如下代码：\n\u0026lt;mirror\u0026gt; \u0026lt;id\u0026gt;alimaven\u0026lt;/id\u0026gt; \u0026lt;name\u0026gt;aliyun maven\u0026lt;/name\u0026gt; \u0026lt;url\u0026gt;http://maven.aliyun.com/nexus/content/groups/public/\u0026lt;/url\u0026gt; \u0026lt;mirrorOf\u0026gt;central\u0026lt;/mirrorOf\u0026gt; \u0026lt;/mirror\u0026gt;  这个代码的意思是指定从阿里的镜像仓库下载jar包，配置完毕后重新创建项目即可。\n写一个简单的示例 SpringBoot项目创建好了，但是这个项目怎么用呢，它好像和之前接触的项目结构不大一样。下面讲述一个简单的实现前端请求与后端返回页面的功能示例；  在src/man/java中创建如下Controller类：\npackage com.example.demo.controller; import org.springframework.stereotype.Controller; import org.springframework.web.bind.annotation.RequestMapping; @Controller //标识一个控制器 接收用户请求,RestController=Controller+ResponseBody public class TestController { @RequestMapping(\u0026quot;/index.do\u0026quot;)//HTTP请求 public String test() { System.out.println(\u0026quot;TestController\u0026gt;\u0026gt;\u0026gt;test\u0026gt;\u0026gt;\u0026gt;is running....return a string\u0026quot;); return \u0026quot;index\u0026quot;;//返回一个视图（HTML页面） } }  在src/man/resources中的template文件夹下创建一个index.html（注意SpringBoot默认是不支持jsp的）\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot; /\u0026gt; \u0026lt;title\u0026gt;Insert title here\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; hello,this is index.html2... \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  跟着，为了使得SpringBoot能够返回前端界面，需要在pom.xml中添加一个依赖。\n\u0026lt;dependency\u0026gt; \u0026lt;groupId\u0026gt;org.springframework.boot\u0026lt;/groupId\u0026gt; \u0026lt;artifactId\u0026gt;spring-boot-starter-thymeleaf\u0026lt;/artifactId\u0026gt; \u0026lt;scope\u0026gt;\u0026lt;/scope\u0026gt; \u0026lt;/dependency\u0026gt;  然后，我们可以在src/main/resouces中创建一个配置文件application.properties，说明如代码所示。\n#server config #快捷键 crtl + / #配置服务器 #端口 server.port=80 #上下文访问路径 server.servlet.context-path=/test  下面点击项目run as——\u0026gt;Spring Boot App，在浏览器中输入localhost:80/test/index.do，就会跳出index.html的内容。\nok，一个简单的SpringBoot项目示例写好了\n","id":0,"section":"posts","summary":"首先下载一个专为Spring设计的eclipse版本——sts，官网链接：Spring tool suite 4，这个IDE和eclipse非常相似，下载解压后","tags":null,"title":"SpringToolSuite快速创建一个springboot项目","uri":"https://wengshiquan.github.io/2019/11/springtoolsuite%E5%BF%AB%E9%80%9F%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AAspringboot%E9%A1%B9%E7%9B%AE/","year":"2019"}],"tags":[]}